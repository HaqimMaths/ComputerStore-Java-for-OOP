/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.alphatechsz.computerstore;

import java.awt.Color;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author Haqim
 */
public class OrderMenu extends javax.swing.JFrame {

    /**
     * Creates new form OrderMenu
     */
    public OrderMenu() {
        initComponents();
        // Set background color
        getContentPane().setBackground(new Color(164, 219, 232));
        // Set total price of all items
        double totalPrice = 0;
        for(Product product : Order.products){
            totalPrice += product.getPrice();
        }
        totalPriceField.setText(String.format("%.2f", totalPrice));
        totalItemField.setText(String.valueOf(Order.products.size()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        orderTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        backButton = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        totalItemLabel = new javax.swing.JLabel();
        totalItemField = new javax.swing.JTextField();
        applyDiscountCheckbox = new javax.swing.JCheckBox();
        totalPriceLabel = new javax.swing.JLabel();
        totalPriceField = new javax.swing.JTextField();
        paymentMethodChoice = new java.awt.Choice();
        paymentMethodLabel = new javax.swing.JLabel();
        confirmOrderButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order Menu");
        setIconImage(new ImageIcon("C:\\Users\\Haqim\\Documents\\MSU\\S4\\CSE20203\\A2\\OOP\\LAB REPORT (A3)\\ComputerStore\\src\\main\\java\\com\\alphatechsz\\computerstore\\AlphaTechszLogo.png").getImage());

        orderTitle.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        orderTitle.setText("Order Menu");

        String[] columnNames = {"No", "ID", "Brand", "Model", "Type",
            "Size", "Color", "Year", "Price(RM)"
        };

        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int index = 0;
        for(Product product : Order.products){
            model.addRow(new Object[] {++index, product.getID(), product.getBrand(),
                product.getModel(), product.getType(), product.getSize(),
                product.getColor(), product.getManufactureYear(),
                product.getPrice()});
    }
    orderTable.setModel(model);
    orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            orderTableMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(orderTable);

    backButton.setText("Back");
    backButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButtonActionPerformed(evt);
        }
    });

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));

    totalItemLabel.setText("Total Item:");

    totalItemField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            totalItemFieldActionPerformed(evt);
        }
    });

    applyDiscountCheckbox.setText("Apply 10% Discount");
    applyDiscountCheckbox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            applyDiscountCheckboxActionPerformed(evt);
        }
    });

    totalPriceLabel.setText("Total Price (RM):");

    totalPriceField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            totalPriceFieldActionPerformed(evt);
        }
    });

    paymentMethodChoice.add("Cash");
    paymentMethodChoice.add("Debit Card");
    paymentMethodChoice.add("Credit Card");
    paymentMethodChoice.add("QR Pay");

    paymentMethodLabel.setText("Payment Method:");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(totalItemLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(totalItemField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(applyDiscountCheckbox)
            .addGap(18, 18, 18)
            .addComponent(totalPriceLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(paymentMethodLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(paymentMethodChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(206, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(paymentMethodChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalItemLabel)
                    .addComponent(totalItemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyDiscountCheckbox)
                    .addComponent(totalPriceLabel)
                    .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentMethodLabel)))
            .addContainerGap(17, Short.MAX_VALUE))
    );

    confirmOrderButton.setText("Confirm Order");
    confirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            confirmOrderButtonActionPerformed(evt);
        }
    });

    removeButton.setText("Remove");
    removeButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            removeButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
        .addGroup(layout.createSequentialGroup()
            .addGap(201, 201, 201)
            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(55, 55, 55)
            .addComponent(removeButton)
            .addGap(60, 60, 60)
            .addComponent(confirmOrderButton)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(orderTitle)
            .addGap(359, 359, 359))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(orderTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(backButton)
                .addComponent(confirmOrderButton)
                .addComponent(removeButton))
            .addGap(43, 43, 43))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        MainMenu mainMenu = new MainMenu();
        mainMenu.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void applyDiscountCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiscountCheckboxActionPerformed
        // Apply 10% discount on each items
        double totalPrice = 0;
        if(applyDiscountCheckbox.isSelected()){
            for(Product product : Order.products){
                totalPrice += product.getDiscountPrice(10);
            }
            totalPriceField.setText(String.format("%.2f", totalPrice));
        } else {
            totalPrice = 0;
            for(Product product : Order.products){
                totalPrice += product.getPrice();
            }
            totalPriceField.setText(String.format("%.2f", totalPrice));
        }
    }//GEN-LAST:event_applyDiscountCheckboxActionPerformed

    private void totalItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalItemFieldActionPerformed
        // Display total item in order
        totalItemField.setText(String.valueOf(Order.products.size()));
    }//GEN-LAST:event_totalItemFieldActionPerformed

    private void totalPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPriceFieldActionPerformed
        // Display total Price
        double totalPrice = 0;
        for(Product product : Order.products){
            totalPrice += product.getPrice();
        }
        totalPriceField.setText(String.format("%.2f", totalPrice));
    }//GEN-LAST:event_totalPriceFieldActionPerformed

    private void confirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderButtonActionPerformed
        // Display receipt in order menu
        String receiptDisplay = "";
        receiptDisplay += "--------------------------------------\n";
        int index = 0;
        double totalPrice = 0;
        if(applyDiscountCheckbox.isSelected()){
            for(Product product : Order.products){
                receiptDisplay += "[" + ++index + "] " + product.getBrand() +
                " " + product.getModel() + "{" + product.getID() + "}" + " = " + "RM" + product.getDiscountPrice(10)
                        +"\n";
                totalPrice += product.getDiscountPrice(10);
            }
        } else {
            for(Product product : Order.products){
                receiptDisplay += "[" + ++index + "] " + product.getBrand() +
                " " + product.getModel() + "{" + product.getID() + "}" + " = " + "RM" + product.getPrice()
                        +"\n";
                totalPrice += product.getPrice();
            }
        }
        String formattedTotalPrice = String.format("%.2f", totalPrice);
        receiptDisplay += "Total Price: RM" + formattedTotalPrice + "\n";
        receiptDisplay += "Payment Method: " + paymentMethodChoice.getSelectedItem() + "\n";
        receiptDisplay += "Thank you for your purchase!\n";
        receiptDisplay += "--------------------------------------\n";
        JOptionPane.showMessageDialog(this, 
                receiptDisplay, "RECEIPT", JOptionPane.INFORMATION_MESSAGE);
        Order.products.clear();
        this.dispose();
        MainMenu mainMenu = new MainMenu();
        mainMenu.setVisible(true);
    }//GEN-LAST:event_confirmOrderButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel orderTableModel = (DefaultTableModel) orderTable.getModel();
        if(orderTable.getSelectedRowCount()==1){
            Product foundProduct = Order.products.stream().filter(product -> product.getID() == Integer.parseInt(orderTableModel.getValueAt(orderTable.getSelectedRow(), 1).toString())).findFirst().orElse(null);
            Order.products.removeIf(product -> product.getID() == foundProduct.getID() && product.getModel().equals(foundProduct.getModel()));
            Inventory.products.add(foundProduct);
            orderTableModel.removeRow(orderTable.getSelectedRow());
            orderTableModel.setRowCount(0);
            double totalPrice = 0;
            int index = 0;
            for(Product product : Order.products){
                    orderTableModel.addRow(new Object[] {++index, product.getID(), product.getBrand(),
                    product.getModel(), product.getType(), product.getSize(),
                    product.getColor(), product.getManufactureYear(),
                    product.getPrice()});
                    totalPrice += product.getPrice();
                    totalPriceField.setText(String.format("%.2f", totalPrice));
            }
            totalPriceField.setText(String.format("%.2f", totalPrice));
            totalItemField.setText(String.valueOf(Order.products.size()));
            JOptionPane.showMessageDialog(this, "Successfully Removed");
        } else{
            JOptionPane.showMessageDialog(this, "Table is empty");
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox applyDiscountCheckbox;
    private javax.swing.JToggleButton backButton;
    private javax.swing.JButton confirmOrderButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel orderTitle;
    private java.awt.Choice paymentMethodChoice;
    private javax.swing.JLabel paymentMethodLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField totalItemField;
    private javax.swing.JLabel totalItemLabel;
    private javax.swing.JTextField totalPriceField;
    private javax.swing.JLabel totalPriceLabel;
    // End of variables declaration//GEN-END:variables
}
