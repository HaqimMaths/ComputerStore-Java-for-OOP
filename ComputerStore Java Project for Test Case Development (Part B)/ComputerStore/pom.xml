<!-- POM xml -->
<!--
  This POM defines the build for the "computerstore" Java project.
  It explains how the project is identified (GAV coordinates),
  which Java/JUnit versions to use, and how unit vs. integration tests
  are discovered and executed via Maven Surefire and Failsafe.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- POM model version (fixed for Maven 3+) -->
  <modelVersion>4.0.0</modelVersion>

  <!--
    Project coordinates:
    - groupId: reverseâ€‘DNS namespace of the organization
    - artifactId: the module/application name that will be built
    - version: semantic version of this build
  -->
  <groupId>com.alphatechsz</groupId>
  <artifactId>computerstore</artifactId>
  <version>1.0.0</version>

  <!--
    Properties centralize common versions and configuration values.
    They can be referenced using ${property.name} elsewhere in the POM.
  -->
  <properties>
    <!-- Java language level compiled by the Maven Compiler Plugin -->
    <maven.compiler.release>17</maven.compiler.release>
    <!-- Character encoding used when compiling sources -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- JUnit 5 (Jupiter) version used across test dependencies -->
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
    <!-- Versions of test execution plugins -->
    <surefire.version>3.2.5</surefire.version>
    <failsafe.version>3.2.5</failsafe.version>
  </properties>

  <!--
    Dependencies required for tests.
    These are test-scoped, so they are not included in the production artifact.
  -->
  <dependencies>
    <!-- JUnit 5 API: annotations and assertion interfaces -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 parameterized testing support (e.g., @ParameterizedTest) -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 engine: enables running tests on the JUnit Platform -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!--
        Maven Compiler Plugin: compiles main and test sources at the specified
        Java release level. Using 'release' is the recommended way for JDK 9+.
      -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>

      <!--
        Maven Surefire Plugin: runs unit tests during the 'test' phase.
        - Includes only files ending with *Test.java.
        - Excludes tests tagged 'integration' so they don't run in this phase.
        - Sets java.awt.headless=false to allow Swing components if needed.
      -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <properties>
            <!-- Exclude 'integration' tagged tests from the unit test phase -->
            <configurationParameters>junit.jupiter.excludeTags=integration</configurationParameters>
          </properties>
          <systemPropertyVariables>
            <!-- Allow Swing components in unit tests -->
            <java.awt.headless>false</java.awt.headless>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!--
        Maven Failsafe Plugin: runs integration tests in the 'integration-test'
        and 'verify' phases. It looks for *Test.java as well but filters to
        only those tests tagged 'integration' via JUnit 5 configuration.
        This separation prevents double execution while avoiding a strict
        file-naming requirement like '*IT.java'.
      -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <!-- Treat integration tests like regular *Test.java files -->
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <!-- Only run tests tagged as 'integration' in this phase -->
                <configurationParameters>junit.jupiter.tags=integration</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <!-- Allow Swing components in integration tests -->
                <java.awt.headless>false</java.awt.headless>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!--
    Profiles provide convenient "suites" you can activate from the command line.
    Each profile sets JUnit tag filters so you can run a focused subset:
      - unit-suite: only unit-tagged tests
      - integration-suite: only integration-tagged tests
      - functional-suite: tests tagged functional (unit + integration)
      - boundary-suite: tests tagged boundary
      - exception-suite: tests tagged exception
    They also set test.mode=true to suppress blocking UI dialogs in tests.
  -->
  <profiles>
    <!-- Suite: run only unit tests -->
    <profile>
      <id>unit-suite</id>
      <build>
        <plugins>
          <!-- Unit tests in the test phase -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=unit</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Unit-tagged tests can also be executed in verify if desired -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=unit</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Suite: run only integration tests -->
    <profile>
      <id>integration-suite</id>
      <build>
        <plugins>
          <!-- Allow running integration-tagged tests explicitly from test phase if needed -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=integration</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Primary execution of integration tests in verify -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=integration</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Suite: run only functional tests (unit + integration) -->
    <profile>
      <id>functional-suite</id>
      <build>
        <plugins>
          <!-- Functional tests in unit phase -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=functional</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Functional tests in verify phase -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=functional</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Suite: run only boundary tests -->
    <profile>
      <id>boundary-suite</id>
      <build>
        <plugins>
          <!-- Boundary tests in unit phase -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=boundary</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Boundary tests in verify phase -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=boundary</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Suite: run only exception-handling tests -->
    <profile>
      <id>exception-suite</id>
      <build>
        <plugins>
          <!-- Exception tests in unit phase -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=exception</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Exception tests in verify phase -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.tags=exception</configurationParameters>
              </properties>
              <systemPropertyVariables>
                <java.awt.headless>false</java.awt.headless>
                <test.mode>true</test.mode>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>